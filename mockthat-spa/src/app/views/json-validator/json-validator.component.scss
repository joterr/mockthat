@import "../../../styles.scss";

$collapsedWidth: 18rem;
$collapsedWidthMedium: 12rem;


.editor {
    position: relative;
    z-index: 999;
    height: 100%;
    background-color: $color-editor;
    border-radius: .25rem;
    box-shadow: 0 0 1.75rem rgba(0, 0, 0, 0.5);
    overflow: hidden;

    .open-editor-space {
        position: absolute;
        cursor: pointer;
        z-index: 9999;
        top: 50%;
        right: -1rem;
        height: 4rem;
        width: 1rem;
        border-radius: 0 .25rem .25rem 0;
        transform: translateY(-50%);
        background-color: rgba(255, 255, 255, 0.2);
        transition: background-color ease 300ms;

        @include respond-to('small') {
            display: none;
        }

        .center {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);

            i {
                opacity: 0.85;
                transform: rotate(0);
                color: rgba(255, 255, 255, 0.2);
                transition: color ease 300ms, transform ease 300ms;
            }
        }

        &:hover {
            background-color: rgba(255, 255, 255, 0.4);

            .center i {
                color: rgba(255, 255, 255, 0.75);
            }
        }

    }
}

.editor-input {
    height: 100%;
    width: calc(50% - 0.75rem);
    float: left;
    padding: 0.5rem 0 0.5rem 0.5rem;
    position: relative;
    transition: 800ms ease width;

    @include respond-to('small') {
        float: none;
        width: calc(100% - 0.5rem);
        height: 100vh;
    }

    .editor-validation {
        position: relative;
        padding: 0.5rem;
        height: 100%;
        width: 100%;
        overflow: hidden;

        &:after {
            content: "";
            position: absolute;
            z-index: -1;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            opacity: 0.35;
            border-radius: 0.125rem;
            transition: 300ms ease background-color;
            background-color: rgb(255, 255, 255, 0.15);
            box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
        }

        .data-local {
            position: absolute;
            left: 0;
            right: 0;
            z-index: 999;
            bottom: 1.3rem;
            text-align: center;

            span {
                display: inline-block;
                position: relative;
                @include std-text-boldest();
                color: #fff;
                opacity: 0.65;
                font-size: small;
                text-shadow: 0 0 3px rgba(0, 0, 0, 0.65);
            }
        }

        .version-history {
            position: absolute;
            bottom: 1rem;
            right: 1.75rem;
            z-index: 999;
            transition: right 400ms ease, transform 400ms ease;
        }

        .state {
            position: absolute;
            top: 1rem;
            right: 1.75rem;
            z-index: 999;

            span {
                display: none;
                @include std-text-boldest();
                font-size: x-large;
                color: #fff;
            }
        }

        &.valid {
            .state .valid {
                display: block;
            }

            &:after {
                background-color: $color-valid;
            }
        }

        &.invalid {
            .state .invalid {
                display: block;
            }

            &:after {
                background-color: $color-invalid;
            }
        }

        textarea {
            display: block;
            resize: none;
            padding: 0.5rem;
            @include std-text-mono();
            font-size: .725rem;
            height: 100%;
            max-height: 100%;
            width: 100%;
            color: #fff;
            border: 0;
            outline: none;
            background: none;
            line-height: 150%;
            transition: width linear 800ms, opacity ease 800ms;
        }
    }
}

.editor-formatted {
    float: right;
    position: relative;
    width: 50%;
    height: 100%;
    padding: 0.5rem 0.5rem 0.5rem 0.25rem;
    transition: 800ms ease width;

    @include respond-to('small') {
        float: none;
        width: 100%;
        height: 100vh;
    }

    .editor-formatted-controls {
        position: absolute;
        top: 1.25rem;
        right: 1.5rem;
        z-index: 999;
        background-color: rgba(255, 255, 255, 0.2);
        padding: 0.25rem;
        border-radius: 0.05rem;
        transition: opacity ease 300ms;

        @include respond-to('medium') {
            text-align: right;
        }

        &.deactivated {
            opacity: 0.4;

            &:before {
                content: "";
                z-index: 999;
                position: absolute;
                top: 0;
                right: 0;
                left: 0;
                bottom: 0;
            }

            .wrapper {
                opacity: 0.4;
            }
        }

        .wrapper {
            margin: 0 -.125rem;

            @include respond-to('small') {
                padding: 0.25rem;
            }

            .groupped {
                display: inline-block;
                margin-left: 0.25rem;

                @include respond-to('medium') {
                    padding-top: 0.5rem;
                    margin-left: 0;
                    display: block;
                }
            }
        }
    }

    .editor-result {
        position: relative;
        padding-left: 0.5rem;
        overflow-y: hidden;

        .editor-numeration {
            position: absolute;
            top: 0;
            left: 0;
            z-index: 99;
            text-align: right;
            border-right: 1px solid rgba(255, 255, 255, 0.4);
            padding-right: 0.5rem;
            line-height: 150%;

            span {
                display: block;
                color: rgba(255, 255, 255, 0.55);
            }
        }
    }

    .json-skeleton {
        display: none;
        padding-left: 1.5rem;

        &.show {
            display: block;
        }

        span {
            display: block;
            height: 13px;
            margin-bottom: 6px;
            border-radius: 0.125rem;
            width: 5rem;
            background-color: rgba(255, 255, 255, 0.05);

            &:nth-child(2) {
                width: 9rem;
            }
            &:nth-child(3) {
                width: 11rem;
            }
            &:nth-child(4) {
                width: 19rem;
            }
            &:nth-child(5) {
                width: 16rem;
            }
            &:nth-child(6) {
                width: 11rem;
                opacity: 0.95;
            }
            &:nth-child(7) {
                width: 21rem;
                opacity: 0.9;
            }
            &:nth-child(8) {
                width: 14rem;
                opacity: 0.85;
            }
            &:nth-child(9) {
                width: 22rem;
                opacity: 0.8;
            }
            &:nth-child(10) {
                width: 13rem;
                opacity: 0.75;
            }
            &:nth-child(11) {
                width: 21rem;
                opacity: 0.7;
            }
            &:nth-child(12) {
                width: 17rem;
                opacity: 0.6;
            }
            &:nth-child(13) {
                width: 11rem;
                opacity: 0.5;
            }
            &:nth-child(14) {
                width: 7rem;
                opacity: 0.4;
            }
            &:nth-child(15) {
                width: 12rem;
                opacity: 0.3;
            }
            &:nth-child(16) {
                width: 9rem;
                opacity: 0.15;
            }
        }
    }

    section.json-beautified {
        display: block;
        color: #fff;
        padding: 1rem;
        padding-left: 0.5rem;
        width: 100%;
        height: 100%;
        overflow-y: auto;

        &>* {
            color: #d7c3fb;
            @include std-text-mono();
            font-size: .725rem;
            line-height: 150%;
        }

        .editor-result {
            & > ul {
                transition: opacity 300ms ease;
            }

            &.ongoing-process > ul {
                opacity: 0.5;
            }
        }

        ul li {
            list-style-type: none;
            position: relative;
            white-space: nowrap;

            &.one-line-value {
                overflow: hidden;
                text-overflow: ellipsis;

                .node-actions,
                .value-action {
                    position: absolute;
                    right: 1rem;
                }
            }

            .json-header {
                display: inline-block;

                .node-actions,
                .node-array-counter {
                    display: none;
                    margin-left: 0.25rem;
                }

                .node-array-counter {
                    margin-left: 0.5rem;
                    margin-right: 0.5rem;
                }

                &:hover>.node-actions,
                &:hover>.node-array-counter {
                    display: inline-block;
                }

                .node-array-counter {
                    opacity: 0.5;
                }

            }

            &:hover>.json-header>.node-actions.flying {
                display: block;
                position: absolute;
                top: 0;
                left: 1.25rem;
            }

            &.type-array {
                &>ul>li.type-object:hover:before,
                &>ul>li.type-null:hover:before,
                &>ul>li.type-string:hover:before,
                &>ul>li.type-number:hover:before {
                    content: "";
                    position: absolute;
                    left: calc(-50px - 0.75rem);
                    opacity: 0.5;
                    display: block;
                    width: 50px;
                    text-align: right;
                }

                @for $i from 1 through 100 {
                    &>ul>li:nth-child(#{$i}):hover:before {
                        content: "#{$i - 1}";
                    }
                }
            }

            &.type-object,
            &.type-array {
                &:not(.hide-content).has-content>.json-header {
                    width: 100%;
                }

                &:not(.has-content) {
                    &>.json-bracket {
                        display: inline-block;
                    }

                    &>ul {
                        display: none;
                    }
                }

                &:hover:after {
                    content: "";
                    position: absolute;
                    border-left: 1px solid rgba(255, 255, 255, 0.2);
                    left: 0.25rem;
                    top: 1rem;
                    bottom: 1rem;
                }

                &>.json-header>span.json-key {
                    cursor: pointer;
                }
            }

            .value-action {
                display: none;
            }

            &:not(.type-array):not(.type-object):hover {
                .value-action {
                    display: inline-block;
                }
            }
        }

        ul {
            margin: 0;
            padding-left: 1.75rem;
        }

        .editor-result>ul {
            overflow-x: auto;
            margin-left: 2.25rem;
            padding-left: 0;
        }

        & .scrollable>ul {
            padding-left: 0 !important;
        }

        .json-key {}

        .json-type {
            display: none;
            vertical-align: top;

            &:after {
                content: "";
                color: #fff;
                font-size: x-small;
                line-height: 110%;
                padding: 0 0.1rem;
                margin: 0.25rem 0.25rem 0 0;
                @include std-text-boldest();
                border-radius: 0.1rem;
            }

            &.object:after {
                content: "OBJECT";
            }

            &.null:after {
                display: none;
            }

            &.boolean:after {
                content: "BOOLEAN";
            }

            &.array:after {
                content: "ARRAY";
            }

            &.number:after {
                content: "NUMBER";
            }

            &.string:after {
                content: "STRING";
            }

            &.data_base64:after {
                content: "DATA:BASE64";
            }

            &.url:after {
                content: "URL";
            }
        }

        &.show-types {
            .json-type {
                display: inline-block;
            }
        }

        .copy-value {
            transition: opacity 400ms ease;

            &:hover {
                opacity: 0.65;
            }
        }

        .json-value {
            color: #BBAC38;

            a {
                color: #BBAC38;
                text-decoration: none;

                &:hover {
                    text-decoration: underline;
                }
            }
        }

        .json-commata {
            display: inline-block,
        }

        .json-bracket {
            display: block;
            position: relative;

            &.start {
                display: inline-block;
                cursor: pointer;

                &:before {
                    position: absolute;
                    top: -0.25rem;
                    bottom: -0.25rem;
                    left: -0.25rem;
                    right: -0.25rem;
                    content: "";
                }
            }
        }

        .hide-content {
            &.has-content .json-bracket {
                display: inline-block;

                &.start:after {
                    content: "...";
                }
            }

            &>* {
                display: none;
            }
        }
    }

    #shadowedTextarea {
        position: relative;
        top: 1000px;
        opacity: 0;
    }
}


@include respond-to('min-medium') {
    .editor.valid-input.collapsable {
        .editor-input {
            width: $collapsedWidth;
        
            @include respond-to('medium') {
                width: $collapsedWidthMedium;
            }

            .data-local {
                display: none;
            }

            .state {
                right: 2rem;
            }

            textarea {
                opacity: 0.35;
                width: 50rem;
            }

            .open-editor-space {
                right: 0;
                border-radius: .25rem 0 0 .25rem;
                background-color: rgba(255, 255, 255, 0.3);

                .center i {
                    transform: rotate(180deg);
                    color: rgba(255, 255, 255, 0.6);
                }
            }

            &:hover {
                cursor: pointer;

                textarea {
                    cursor: pointer;
                }
            }
        }

        .editor-formatted {
            width: calc(100% - #{$collapsedWidth});

            @include respond-to('medium') {
                width: calc(100% - #{$collapsedWidthMedium});
            }

            @include respond-to('small') {
                width: 100%;
            }
        }

        .version-history {
            right: 50%;
            transform: translateX(50%);
        }
    }
}

$element-height-complete: 1.8rem;
$element-height-complete-local: 1rem;
$frill-vert-space: 1rem;
$frill-horizontal-offset: 1.2rem;
$frill-distance: 0.6rem;
$frill-stagger: 0.4rem;

$frill-rotation: 40deg;
$frill-height: 0.1rem;
$frill-width: 1rem;

$speed: 0.32s;
$timing-function: ease-out;
$delay: 0.32s;
$delay-local: 1s;

.frills,
.frills:after,
.frills:before {
    position: absolute;
    background: #fff;
    border-radius: ($frill-height/2);
    height: $frill-height;
}

.frills:after,
.frills:before {
    content: "";
    display: block;
}

.frills:before {
    bottom: $frill-vert-space;
}

.frills:after {
    top: $frill-vert-space;
}

.left-frills {
    left: calc(-1 * #{$frill-horizontal-offset});
    top: ($element-height-complete/2)- ($frill-height/2);

    .valid & {
        animation: move-left $speed $timing-function $delay,
            width-to-zero $speed $timing-function $delay;
    }

    &:before,
    &:after {
        left: $frill-stagger;
    }

    &:before {
        .valid & {
            animation: width-to-zero $speed $timing-function $delay,
                move-up $speed $timing-function $delay;
        }
    }

    &:after {
        .valid & {
            animation: width-to-zero $speed $timing-function $delay,
                move-down $speed $timing-function $delay;
        }
    }
}

.right-frills {
    right: calc(-1 * #{$frill-horizontal-offset});
    top: ($element-height-complete/2)- ($frill-height/2);

    .valid & {
        animation: move-right $speed $timing-function $delay,
            width-to-zero $speed $timing-function $delay;
    }

    &:before,
    &:after {
        right: $frill-stagger;
    }

    &:before {
        .valid & {
            animation: width-to-zero $speed $timing-function $delay,
                move-up $speed $timing-function $delay;
        }
    }

    &:after {
        .valid & {
            animation: width-to-zero $speed $timing-function $delay,
                move-down $speed $timing-function $delay;
        }
    }
}

.left-frills:before,
.right-frills:after {
    transform: rotate($frill-rotation);
}

.left-frills:after,
.right-frills:before {
    transform: rotate(-$frill-rotation);
}


.data-local {

    .left-frills,
    .right-frills {
        top: ($element-height-complete-local/2)- ($frill-height/2);
    }

    .left-frills {
        animation: move-left $speed $timing-function $delay-local,
            width-to-zero $speed $timing-function $delay-local;

        &:before {
            animation: width-to-zero $speed $timing-function $delay-local,
                move-up $speed $timing-function $delay-local;
        }

        &:after {
            animation: width-to-zero $speed $timing-function $delay-local,
                move-down $speed $timing-function $delay-local;
        }
    }

    .right-frills {
        animation: move-right $speed $timing-function $delay-local,
            width-to-zero $speed $timing-function $delay-local;

        &:before {
            animation: width-to-zero $speed $timing-function $delay-local,
                move-up $speed $timing-function $delay-local;
        }

        &:after {
            animation: width-to-zero $speed $timing-function $delay-local,
                move-down $speed $timing-function $delay-local;
        }
    }
}



@keyframes move-left {
    0% {
        transform: none;
    }

    65% {
        transform: translateX(-1 * $frill-distance);
    }

    100% {
        transform: translateX(-1 * $frill-distance);
    }
}

@keyframes move-right {
    0% {
        transform: none;
    }

    65% {
        transform: translateX($frill-distance);
    }

    100% {
        transform: translateX($frill-distance);
    }
}

@keyframes width-to-zero {
    0% {
        width: $frill-width;
    }

    100% {
        width: $frill-height;
    }
}

@keyframes move-up {
    0% {}

    100% {
        bottom: $frill-vert-space * 1.55;
    }
}

@keyframes move-down {
    0% {}

    100% {
        top: $frill-vert-space * 1.55;
    }
}