/* barlow-semi-condensed-200 - latin */
@font-face {
    font-family: 'Barlow Semi Condensed';
    font-style: normal;
    font-weight: 200;
    src: url('/assets/fonts/barlow-semi-condensed-v5-latin-200.eot');
    src: local('Barlow Semi Condensed ExtraLight'), local('BarlowSemiCondensed-ExtraLight'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-200.eot?#iefix') format('embedded-opentype'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-200.woff2') format('woff2'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-200.woff') format('woff'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-200.ttf') format('truetype'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-200.svg#BarlowSemiCondensed') format('svg');
}

/* barlow-semi-condensed-regular - latin */
@font-face {
    font-family: 'Barlow Semi Condensed';
    font-style: normal;
    font-weight: 400;
    src: url('/assets/fonts/barlow-semi-condensed-v5-latin-regular.eot');
    src: local('Barlow Semi Condensed Regular'), local('BarlowSemiCondensed-Regular'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-regular.eot?#iefix') format('embedded-opentype'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-regular.woff2') format('woff2'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-regular.woff') format('woff'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-regular.ttf') format('truetype'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-regular.svg#BarlowSemiCondensed') format('svg');
}

/* barlow-semi-condensed-500 - latin */
@font-face {
    font-family: 'Barlow Semi Condensed';
    font-style: normal;
    font-weight: 500;
    src: url('/assets/fonts/barlow-semi-condensed-v5-latin-500.eot');
    src: local('Barlow Semi Condensed Medium'), local('BarlowSemiCondensed-Medium'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-500.eot?#iefix') format('embedded-opentype'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-500.woff2') format('woff2'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-500.woff') format('woff'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-500.ttf') format('truetype'),
        url('/assets/fonts/barlow-semi-condensed-v5-latin-500.svg#BarlowSemiCondensed') format('svg');
}

/* fira-mono-regular - latin */
@font-face {
    font-family: 'Fira Mono';
    font-style: normal;
    font-weight: 400;
    src: url('/assets/fonts/fira-mono-v8-latin-regular.eot');
    src: local('Fira Mono Regular'), local('FiraMono-Regular'),
        url('/assets/fonts/fira-mono-v8-latin-regular.eot?#iefix') format('embedded-opentype'),
        url('/assets/fonts/fira-mono-v8-latin-regular.woff2') format('woff2'),
        url('/assets/fonts/fira-mono-v8-latin-regular.woff') format('woff'),
        url('/assets/fonts/fira-mono-v8-latin-regular.ttf') format('truetype'),
        url('/assets/fonts/fira-mono-v8-latin-regular.svg#FiraMono') format('svg');
}

$font-family: 'Barlow Semi Condensed',
sans-serif;
$font-family-mono: 'Fira Mono',
monospace;

@mixin std-text() {
    font-family: $font-family;
    font-weight: 200;
}

@mixin std-text-bold() {
    font-family: $font-family;
    font-weight: 400;
}

@mixin std-text-boldest() {
    font-family: $font-family;
    font-weight: 500;
}

@mixin std-text-mono() {
    font-family: $font-family-mono;
    font-weight: 400;
}

$color-highlight: #EEC643;
$color-base: #1B2F33;
$color-editor: #0D0221;
$color-valid: #40B161;
$color-invalid: #E04F34;

* {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    box-sizing: border-box;
}

body {
    @include std-text-bold();
    background-color: $color-base;
}

p {
    @include std-text-bold();
}

h1,
h2,
h3,
h4,
h5,
h6 {
    @include std-text-boldest();
}

::-webkit-scrollbar {
    width: 0.5rem;
    height: 0.5rem;
    cursor: pointer;
}

::-webkit-scrollbar-track {
    -webkit-box-shadow: none;
    box-shadow: none;
    -webkit-border-radius: 0.1rem;
    border-radius: 0.1rem;
    background: rgba(255, 255, 255, 0.25);
    cursor: pointer;
}

::-webkit-scrollbar-thumb {
    -webkit-border-radius: 0.1rem;
    border-radius: 0.1rem;
    background: rgba(255, 255, 255, 0.8);
    -webkit-box-shadow: none;
    box-shadow: none;
}

::-webkit-scrollbar-thumb:window-inactive {
    background: rgba(255, 255, 255, 0.8);
}

$breakpoints: ("small": (max-width: 767px),
    "medium": (max-width: 1279px),
    "large": (max-width: 1600px),
    "x-large": (max-width: 1919px));

@mixin respond-to($name) {
    @if map-has-key($breakpoints, $name) {
        @media #{inspect(map-get($breakpoints, $name))} {
            @content;
        }
    }

    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        +"Please make sure it is defined in `$breakpoints` map.";
    }
}

.margin-left-small {
    margin-left: 0.5rem;
}

.margin-right-small {
    margin-right: 0.5rem;
}